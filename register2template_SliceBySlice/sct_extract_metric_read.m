function [metriclabel, metriclabelmat] = sct_extract_metric_read(filename)
% Reads the output of sct_extract_metric ("metric_label.txt")
% 
% USAGE:
%   [metriclabelcell, metriclabelmat] = sct_extract_metric_read('metric_label.txt')
%
% OUTPUTS:
%   metriclabelcell N[labels]x4 cell array: ID, label name, mean, std 
%   metriclabelmat N[labels]x3 matrix: ID, mean, std
%
% Auto-generated by MATLAB on 2015/02/02 20:34:16

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 1;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: double (%f)
%	column2: text (%s)
%   column3: double (%f)
%	column4: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%s%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'CommentStyle', '#', 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    textscan(fileID, '%[^\n\r]', startRow(block)-1, 'ReturnOnError', false);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
dataArray([1, 3, 4]) = cellfun(@(x) num2cell(x), dataArray([1, 3, 4]), 'UniformOutput', false);
metriclabel = [dataArray{1:end-1}];
metriclabelmat = cell2mat(metriclabel(:,[1 3 4]));
